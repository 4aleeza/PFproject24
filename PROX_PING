#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <windows.h>
#include <unistd.h>
#define MAXL 100
//we are pre-setting 50 max blocks for dynamic memory

void func(int id, int prog);

void func(int id, int prog) {
    printf("ID %d : [", id);
    for (int i = 0; i < MAXL; i++) {
        if (i < prog) {
            printf("=");
        } else {
            printf(" ");
        }
    }
    printf("] %d%%\r", prog);
    fflush(stdout);
}

int main() {
    char *pwd, *name;
    pwd = (char *)malloc(50 * sizeof(char)); //50 memory heap me derha instead of stack
    name = (char *)malloc(50 * sizeof(char));

    if (pwd == NULL || name == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }

    FILE *cred = fopen("creds.txt", "a");
    if (cred == NULL) {
        printf("NULL FILE : ERROR 404 \n");
        return 1;
    }

  
    printf("Enter Username: \n");
    fgets(name, 50, stdin);
    name[strcspn(name, "\n")] = '\0'; 

    printf("Enter Password: ");
    fgets(pwd, 50, stdin);
    pwd[strcspn(pwd, "\n")] = '\0'; 

    // Store credentials in file
    fprintf(cred, "%s\n%s\n", name, pwd);
    fclose(cred);

    // maskin
    printf("NAME : %s  PASSWORD : ", name);
    for (int i = 0; i < strlen(pwd); i++) {
        printf("*");
    }
    printf("\n");

    
    char *login_name = (char *)malloc(50 * sizeof(char));  
    char *login_pwd = (char *)malloc(50 * sizeof(char));   

    if (login_name == NULL || login_pwd == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }
    int logged_in = 0;
    while (!logged_in) {
        printf("Please log in to continue.\n");
        printf("Enter Username: \n");
        fgets(login_name, 50, stdin);
        login_name[strcspn(login_name, "\n")] = '\0'; 

        printf("Enter Password: ");
        fgets(login_pwd, 50, stdin);
        login_pwd[strcspn(login_pwd, "\n")] = '\0'; 

        // Open credentials file to validate login
        FILE *cred_check = fopen("creds.txt", "r");
        if (cred_check == NULL) {
            printf("Error reading credentials file\n");
            free(login_name);
            free(login_pwd);
            return 1;
        }

        char file_name[50], file_pwd[50];
        while (fscanf(cred_check, "%s\n%s\n", file_name, file_pwd) == 2) {
            if (strcmp(file_name, login_name) == 0 && strcmp(file_pwd, login_pwd) == 0) {
                printf("Login successful!\n");
                logged_in = 1;
                break;
            }
        }
        fclose(cred_check);

        if (logged_in!=1) {
            printf("Invalid login. Please try again.\n");
        }
    }

    printf("WELCOME TO PROXIMITY PING!\n");

    char yn[15]; // yes or no
    int ans = 0;
    printf("DEAR %s, WOULD YOU LIKE TO ACCESS CURRENTLY AVAILIBLE LOCATIONS? \n", name);
    scanf("%s", yn);
    if ((strcmp(yn, "yes") == 0) || (strcmp(yn, "YES") == 0)) {
        ans = ans + 1;

        int id = 2;
        int prog = 100;
        for (int i = 0; i <= prog; i++) {
            func(id, i);
            Sleep(1000);
        }
        printf("\n");
    }

    if (ans == 1) {
        // Password saving ends here
        char *locations[10] = {
            "civil lines (1)",
            "pechs (2)",
            "clifton (3)",
            "cantonment (4)",
            "sector 14 (5)",
            "regal chowk (6)",
            "malir cantt (7)",
            "shah latif (8)",
            "shahrah-e-faisal (9)",
            "north nazimabad (10)"
        };

        for (int i = 0; i < 10; i++) {
            printf("%s\n", locations[i]);
        }
        printf("\n");
        int loc; // location number
        char ping[30];

        while (1) {
            printf("ENTER THE NUMBER OF LOCATION YOU WANT TO ACCESS: \n");
            scanf("%d", &loc);

            if (loc == 0) {
                printf("EXITING PROGRAM. THANK YOU FOR USING PROXIMITY PING!\n");
                break; // Exit the loop
            }
            if (loc == 111) {
                printf("PROCEEDING FURTHER \n");
                printf("ENTER THE PLACE YOU WOULD LIKE TO HEAD TO: \n");
                fgets(ping, sizeof(ping), stdin);
                //CALL THE 2 FUNCTIONS

                break;
            }

            switch (loc) {
            
        case 1 : {
            printf("**********************************\n");
            printf("\n HOTEL PEARL CONTINENTAL \n RATING ON TRIVAGO : **** \n JAMSHED SAYS : AMAZING AMBIANCE! \n RUBA SAYS : VERY BEAUTIFUL \n");
            printf("FINE-DINE/ROOM SERVICES\n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-02:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT FOODS INN \n RATING ON ZOMATO : **** \n ZAHRA SAYS : EXCELLENT TASTE, AFFORDABLE PRICES! \n AHMED SAYS : A PERFECT PLACE FOR FAMILIES. \n");

            break;
        }
                case 2 : {
            printf("**********************************\n");
            printf("\n HOTEL BEACH LUXURY \n RATING ON TRIVAGO : ***** \n ARHUM SAYS : OUTCLASS.\n");
            printf("FINE-DINE/ROOM SERVICES AVAILIBLE \n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("06:00AM-04:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT GHALIB \n RATING ON GOOGLE : **** \n IMRAN SAYS : A LEGENDARY SPOT FOR DESI FOOD! \n KIRAN SAYS : THE BBQ IS SIMPLY AMAZING. \n");

            break;

        }
                case 3 : {
            printf("**********************************\n");
            printf("\n ROYAL-INN HOTEL \n RATING ON TRIVAGO : ** \n ZALIK SAYS : POOR SERVICE \n AHMAD SAYS : TOO EXPENSIVE \n");
            printf("FINE-DINE/ROOM SERVICES AVAILIBLE \n");
            printf("DOES NOT ACCEPT CARD PAYMENTS\n");
            printf("11:00AM-12:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT LAL QILA \n RATING ON TRIPADVISOR : ***** \n SAMEER SAYS : A ROYAL DINING EXPERIENCE! \n ANAM SAYS : GREAT VARIETY OF FOOD WITH LIVE COOKING. \n");

            break;
        }
                case 4 : {
            printf("**********************************\n");
            printf("\n XEFAN HOTEL \n RATING ON TRIVAGO : *** \n JARASEEM SAYS : GOOD FOOD \n TOSI SAYS : NOT BAD \n");
            printf("FINE-DINE AVAILIBLE\n");
            printf("ROOM SERVICES NOT AVAILIBLE\n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-02:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT COCONUT GROVE \n RATING ON YELP : **** \n ALIA SAYS : RELAXING ATMOSPHERE WITH GREAT SEAFOOD. \n HASSAN SAYS : THE COCONUT CURRY IS A MUST-TRY. \n");


            break;
        }
                case 5 : {
            printf("**********************************\n");
            printf("\n AMBIANCE BOUTIQUE HOTEL \n RATING ON TRIVAGO : * \n ABDULLAH SAYS : WORST HOTEL IVE STAYED IN \n HAMZA SAYS : NO, JUST NO \n");
            printf("OUTDOOR-DINE/ROOM SERVICES AVAILIBLE \n");
            printf("DOES NOT ACCEPT CARD PAYMENTS\n");
            printf("12:00PM-12:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS NOT AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT XANDER'S \n RATING ON GOOGLE : ***** \n SAAD SAYS : GREAT FOR BRUNCH! \n LINA SAYS : FRESH INGREDIENTS AND TRENDY VIBE. \n");

            break;
        }        case 6 : {
            printf("**********************************\n");
            printf("\n AVARI TOWERS \n RATING ON TRIVAGO : ***** \n SHAHVEER SAYS : BEST HOTEL EVER! \n ISBAH SAYS : I LOVE THIS PLACE \n");
            printf("PROXIMITY PING'S BEST RATED+");
            printf("FINE-DINE/ROOM-SERVICES/JACQUZEE/LODGES AVAILIBLE\n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("OPEN 24/7\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT GAFFAR KABAB HOUSE \n RATING ON ZOMATO : **** \n ABDULLAH SAYS : THE JUICIEST KABABS IN TOWN! \n AMINA SAYS : PURE DESI TASTE, GREAT PORTIONS. \n");

            break;
        }
                case 7 : {
            printf("**********************************\n");
            printf("\n DAYS-INN HOTEL \n RATING ON TRIVAGO : * \n SALEEM SAYS : WORST QUALITY BEDS AND ROOMS \n");
            printf("FINE-DINE \n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-02:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS NOT AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT LOTUS COURT \n RATING ON GOOGLE : **** \n NAIMA SAYS : EXCELLENT CHINESE FOOD. \n JUNAID SAYS : LOVE THE AUTHENTIC FLAVORS. \n");

            break;
        }
                case 8 : {
            printf("**********************************\n");
            printf("\n HOTEL MANDARIAB \n RATING ON TRIVAGO : *** \n HADEED SAYS : A LITTLE EXPENSIVE \n AASHIR SAYS : BRING BUCKS HAHAHA \n");
            printf("FINE-DINE/ROOM SERVICES AVAILIBLE \n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-12:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS NOT AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT SAKURA \n RATING ON TRIPADVISOR : ***** \n AYESHA SAYS : BEST SUSHI IN THE CITY! \n DANIAL SAYS : AUTHENTIC JAPANESE FLAVORS. \n");

            break;
        }
                case 9 : {
            printf("**********************************\n");
            printf("\n BURJ-AL ARAB HOTEL \n RATING ON TRIVAGO : **** \n LUQMAN SAYS : FRIENDLY STAFF, BEAUTIFUL ROOMS \n");
            printf("FINE-DINE/ROOM SERVICES AVAILIBLE \n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-02:00AM OPEN 7 DAYS\n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT OKRA \n RATING ON YELP : ***** \n RABIA SAYS : A COZY PLACE WITH AMAZING FOOD. \n TALHA SAYS : THE PASTA AND DESSERTS ARE MUST-TRIES! \n");

            break;
        }
                case 10 : {
            printf("**********************************\n");
            printf("\n PENNINSULA HOTEL \n RATING ON TRIVAGO : * \n RAMEEL SAYS : VERY BAD EXPERIENCE :( ) \n ZULQARNAIN SAYS : EWW \n");
            printf("FINE-DINE/DELIVERY SERVICES AVAILIBLE \n");
            printf("ACCEPTS CARD PAYMENTS\n");
            printf("09:00AM-02:00AM OPEN 5 DAYS APART FROM WEDNESDAYS/FRIDAYS \n");
            printf("PROXIMITY PING DISCOUNTS AVAILIBLE\n");
            printf("\n**********************************\n");
            printf("**********************************\n");
            printf("\n RESTAURANT BBQ TONIGHT \n RATING ON ZOMATO : ***** \n FARHAN SAYS : THE BBQ IS NEXT LEVEL! \n NIDA SAYS : A CLASSIC FOR PAKISTANI CUISINE LOVERS. \n");
            break;
        }
            default:
            printf("Invalid option. Please try again.\n");
            break;
            }
        }
    } else {
        printf("WE ARE SORRY TO SEE YOU GO :( COME BACK SOON! \n");
    }
    free(pwd);
    free(name);
    free(login_name);
    free(login_pwd);

    return 0;
}
